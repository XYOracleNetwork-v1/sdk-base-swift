query TotalXyoTokens($ethAddress: String) {
  totalXyoTokens(ethAddress: $ethAddress)

  historicalXyoTokensEarned(ethAddress: $ethAddress, from: 1548115722712)
}

query MyDevices {
    mySentinels {
      meta {
        totalCount
      }
      items {
        id
        name
        photoUrl
        publicKey
        uuid
        major
        minor
      }
    }
    myBridges {
      meta {
        totalCount
      }
      items {
        id
        name
        photoUrl
        publicKey
        uuid
        major
        minor
      }
    }
  }

mutation AddSentinel(
    $id: String!
    $name: String
    $photoUrl: String
    $publicKey: String
    $uuid: String
    $major: Int
    $minor: Int
  ) {
    addSentinel(
      address: {
        id: $id
        publicKey: $publicKey
        name: $name
        photoUrl: $photoUrl
      }
      sentinel: { uuid: $uuid, major: $major, minor: $minor }
    ) {
      id
      name
      photoUrl
      publicKey
      uuid
      major
      minor
    }
  }

mutation UpdateSentinel(
    $id: String!
    $name: String
    $photoUrl: String
    $publicKey: String
    $uuid: String
    $major: Int
    $minor: Int
  ) {
    updateSentinel(
      address: {
        id: $id
        publicKey: $publicKey
        name: $name
        photoUrl: $photoUrl
      }
      sentinel: { uuid: $uuid, major: $major, minor: $minor }
    ) {
      id
      name
      photoUrl
      publicKey
      uuid
      major
      minor
    }
  }

mutation DeleteSentinel($publicKey: String!) {
    deleteSentinel(publicKey: $publicKey) {
      name
      publicKey
      photoUrl
    }
  }

query AllBridges($limit: Int, $cursor: String) {
  bridges(paginate: { limit: $limit, cursor: $cursor }) {
    meta {
      totalCount
      cursor
    }
    items {
      publicKey
      name
      photoUrl
      owner
    }
  }
}

query AllSentinels($limit: Int, $cursor: String) {
  sentinels(paginate: { limit: $limit, cursor: $cursor }) {
    meta {
      totalCount
      cursor
    }
    items {
      publicKey
      name
      photoUrl
      owner
    }
  }
}

query ListArchivists($limit: Int, $cursor: String) {
  archivists(paginate: {limit: $limit, cursor: $cursor}) {
    meta {
      totalCount
      cursor
    }
    items {
      url
    }
  }
}

mutation AddArchivist($multiaddr: String) {
  addArchivist (multiaddr: $multiaddr) {
    url
  }
}

query MyUserInfo {
    myUserInfo {
      displayName
      email
      photoURL
      publicKey
      isAnonymous
    }
  }

mutation UpdateMyUserInfo(
    $displayName: String
    $photoURL: String
    $publicKey: String
    $isAnonymous: Boolean
  ) {
    updateMyUserInfo(
      info: {
        displayName: $displayName
        photoURL: $photoURL
        publicKey: $publicKey
        isAnonymous: $isAnonymous
      }
    ) {
      displayName
      photoURL
      email
      publicKey
      isAnonymous
    }
  }